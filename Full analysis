# Install all packages at once
packages <- c("dplyr", "readr", "lubridate", "ggplot2", "patchwork", "ggthemes")
install.packages(packages)

# Load all packages at once
lapply(packages, require, character.only=TRUE)

# Import data
bottom <- read_csv("bottom_line.csv", col_types = cols(Ping_date = col_datetime(format = "%m/%d/%Y"))) %>% rename_all(tolower)

# Glimpse the data
glimpse(bottom)

# Clean the bottom dataset
bottom_clean <- bottom %>%
  filter(., position_status==1) %>%
  select(., c(ping_date, ping_time, latitude, longitude, depth)) %>%
  mutate(., 
         date_time= ping_date + ping_time, 
         distance_between= c(0, geosphere::distHaversine(cbind(longitude[-n()], latitude[-n()]),
                                                         cbind(longitude[ -1], latitude[ -1]))),
         distance_along= cumsum(distance_between))
glimpse(bottom_clean)

# Reduce the size of the plots
options(repr.plot.width = 7, repr.plot.height = 5)

# Plot the ship's track
p_ship_track  <- ggplot(
  bottom_clean, aes(latitude, longitude)) +
  geom_point(size= .5)+
  theme_minimal()+
  labs(x = "Longitude", y = "Latitude")
plot(p_ship_track)

# Plot the depth of the sea floor along the ship's track
p_bathymetry  <-  ggplot(bottom_clean, aes(distance_along, depth)) +
  geom_point(size= .5) +
  scale_y_reverse() +
  theme_minimal() +
  labs(title = "Offshore anatomy along ship's trackline", x = "Distance along trackline (m)", y = "Depth (m)") +
  geom_hline(yintercept = c(184, 2000), colour = "orange", alpha = .5) + 
  annotate("text", x = c(50000), y = c(90, 1100, 2100), label = c("Continental Shelf", "Continental Slope", "Deep Sea"), colour = "grey80", size = 4) +
  annotate(geom="point", x=28990, y=140, size=10, shape=21, fill="transparent") +
  annotate(geom="text", x=28990, y=15,label="Break")
plot(p_bathymetry)

# Arrange the plots side by side for easier viewing
p_ship_track + p_bathymetry + plot_annotation(title = "Ship track (left) and the corresponding depth along it (right)",
                                               theme = theme(plot.title = element_text(size = 16)))

# Read in the acoustic data
acoustic <- read_csv("acoustic.csv", 
                 col_types = cols(Date_M = col_datetime(format = "%Y%m%d"))) %>%
  filter(Lon_M != 999.0)
glimpse(acoustic)

# Create a list of variables to keep
variables_keep <- c("Interval", "Layer", "Sv_mean", "Frequency", 
          "Date_M", "Time_S", "Time_E", "Lat_M", "Lon_M")
# Select, rename, filter, mutate, and arrange the data 
Sv_layer1 <- acoustic %>%
  select(one_of(variables_keep)) %>% 
  rename(Spatial_interval = Interval, Date = Date_M) %>%
  filter(Layer == 1)  %>% 
  mutate(Datetime_start = Date + Time_S,
       Datetime_end = Date + Time_E)  %>% 
  arrange(Datetime_start)
glimpse(Sv_layer1)

# More data wrangling...
Sv <- Sv_layer1 %>% 
  mutate(.,
         Distance_between = c(0, geosphere::distHaversine(cbind(Lon_M[-n()], Lat_M[-n()]),       
                                               cbind(Lon_M[  -1], Lat_M[  -1]))),
       Distance_along = cumsum(Distance_between)) %>%
  na_if(-999.0) %>% 
  mutate(Time_interval = interval(Datetime_start, Datetime_end))
# Glimpse the data
glimpse(Sv)

# Function: assign Spatial_interval to bottom points that fall within Time_interval
get_Interval_by_time <- function(bottom_data){
  res <- Sv$Spatial_interval[bottom_data %within% Sv$Time_interval]
  if(length(res)==0) return(NA)         
  return(res)
}
# Map the track line interval value to bottom_clean
bottom_spatial_interval_segments <- bottom_clean  %>% 
  mutate(trackline_interval = purrr::map_dbl(date_time, get_Interval_by_time))

# Inspect the first 15 rows
head(bottom_spatial_interval_segments, 15)

# Group bottom_clean and calculate the mean depth
bottom_intervals <- bottom_spatial_interval_segments %>%
  group_by(trackline_interval) %>%
  summarize(depth_mean = mean(depth)) %>%
  ungroup()

# Join the bottom intervals data to the acoustic data
Sv_and_depth <- Sv %>%
  left_join(bottom_intervals, by = c("Spatial_interval"="trackline_interval")) %>% 
  mutate(depth_plot = ifelse(depth_mean >= 250, 250, depth_mean))

# Glimpse the data 
glimpse(Sv_and_depth)

# Top panel
Sv_mean_plot <- ggplot(Sv_and_depth, aes(y= Sv_mean, Distance_along)) +
  geom_line(size=0.5) +
  labs(y=expression(mean~volume~backscatter~S[v]~(dB))) +
  theme_minimal()+
  theme(axis.title.x=element_blank())+
  geom_vline(xintercept = 26997, colour = "orange", alpha = .5) +
  annotate("text", y = -65, x = 6000, label = c("Fish population"), colour = "black", size = 4) +
  geom_rect(aes(xmin=0, xmax=12000, ymin=-66,ymax=-73), fill="lightskyblue1", colour=NA, alpha=.025)

# Bottom panel
bathymetry <- ggplot(Sv_and_depth, aes(y=depth_plot, x=Distance_along)) +
  geom_line(size = 0.5) +
  scale_y_reverse()+
  theme_minimal()+
  labs(x = "Distance along trackline (m)", y = "Depth (m)") +
  geom_vline(xintercept = 26997, colour = "orange", alpha = .5) + 
  annotate("text", y = 225, x = 13000, label = c("Continental Shelf"), colour = "orange", size = 4) +
  annotate(geom="point", x=26997, y=125, size=7, shape=21, fill="transparent") +
  annotate(geom="text", x=40000, y=125, label="Shelf break")

# Display the two panels in one figure
Sv_mean_plot / bathymetry






